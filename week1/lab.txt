EX-1

Task 1: Little Lemon want a list of all customers who have made bookings. Write an INNER JOIN SQL statement to combine the full name and the phone number of each customer from the Customers table with the related booking date and 'number of guests' from the Bookings table. 
    The expected output result should be the same as the following screenshot (assuming that you have created and populate the tables correctly.)
Answer : 
    SELECT Customers.FullName ,Customers.PhoneNumber , Bookings.BookingDate, Bookings.NumberOfGuests   
    FROM Bookings INNER JOIN Customers  
    ON  Customers.CustomerID = Bookings.CustomerID ;

Task 2: Little Lemon want to view information about all existing customers with bookings that have been made so far. This data must include customers who havenâ€™t made any booking yet. 
    Write a LEFT JOIN SQL statement to view the customer id from Customers table and the related booking id from the Bookings table. The expected output result should be the same as the following screenshot (assuming that you have created and populate the tables correctly.)
Answer :
    SELECT Customers.CustomerID, Bookings.BookingID 
    FROM Customers LEFT JOIN Bookings 
    ON Customers.CustomerID = Bookings.CustomerID ;


EX-2

Task 1: Write a SQL SELECT statement to group all records that have the same order date.
    Answer: 
    SELECT OrderDate 
    FROM Orders 
    GROUP BY  OrderDate ;
    
Task 2: Write a SQL SELECT statement to retrieve the number of orders placed on the same day.
    Answer: 
    SELECT OrderDate, COUNT(OrderID)
    FROM Orders 
    GROUP BY OrderDate ; 

Task 3: Write a SQL SELECT statement to retrieve the total order quantities placed by each department.
    Answer : 
    SELECT Department,  COUNT(OrderQty) AS "Order Quantity" 
    FROM Orders  
    GROUP BY Department




Task 4: Write a SQL SELECT statement to retrieve the number of orders placed on the same day between the following dates: 1st June 2022 and 30th June 2022.
    Answer 1:    
    SELECT OrderDate , COUNT(OrderID) AS Orders 
    FROM Orders 
    WHERE OrderDate BETWEEN '2022-06-01' AND '2022-06-30' 
    GROUP BY OrderDate ;

    Answer 2:
        SELECT OrderDate , COUNT(OrderID) AS Orders 
        FROM Orders 
        GROUP BY OrderDate 
        HAVING OrderDate BETWEEN '2022-06-01' AND '2022-06-30';


    Note : the difference between the two Answers is the first on apples the filters condition before Grouping data on OrderData column , 
           the second Answer filters the data after grouping data on OrderData and after Aggregation work is done
